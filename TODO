# TODO #

- #38 !!! `flash_now` and `flash` should return null when getting an undefined flash var, not all flash vars. This behaviour will allow to test flash var presence `if($test = flash_now('test')){…}`
- adding autorender() in abstract.php
- testing and documenting autorendering features
- adding an option('display_errors'); by default ini_set('display_errors', 0) in production env, but enabled if env is dev (unless matching option is enabled)
- explain autoload_controller() in README
- in debug output, formating debug_backtrace to be me readable (like debug_backtrace output but with extra informations that can be toggled)
- #36, explicit HTTP/1.1
- adding tests with special characters for request_uri
- complete CHANGES file
- adding support for extra GET variables in all url styles like in rails (http://groups.google.fr/group/limonade/browse_thread/thread/f9402fb0a3b1f65c)
- [#36] using _SERVER["SERVER_PROTOCOL"]: implement and make tests
- improve security in render_file with a safe_dir option
- update Limonade codename (in french now)
- adding contributors/thanks in AUTHORS
- testing calling lambdas from dispatch functions, with native php callback (see <http://limonade.tumblr.com/post/247098505/hidden-features>).
- Adding documentation about dispatch callback (see blog post <http://limonade.tumblr.com/post/247098505/hidden-features>) (remember that controller function args must be in the same order as route params!)
- in route() functions, replace "function" name with "callback" name (example: in route_build() returned array). Enhanced use of callback pseudo-type instead of functions names
- write tests for partial()
- refactor partial()
- partial() write small doc (README) and examples
- write tests for content_for()
- refactor content_for()
- content_for() write small doc (README) and examples
- in run(), passing $env to all functions that require it
- improving unregister_globals 
    - to avoid predefined variables (_SERVER, _REQUEST...) deletion
    - to handle session globals by calling unregister_globals('_SESSION') after session start
- deleting deprecated ['HTTP_SERVER_VARS'], ['HTTP_GET_VARS']... (<http://www.php.net/manual/fr/reserved.variables.post.php>...)
- implement user agent detection option in routing
- params function should be singular like option ?
- adding a debug() helper
- new redirect_to (support for https)
- add header X-Limonade-PHP: (lim version name) or X-Powered-By: LimonadePHP… ; (cosmetic ;-)
- use array_walk_recursive for unregister_globals
- simple form helper with XSS/CSRF protection
- remove examples/ and move it in an external depot
- public API documentation:
    - tests: tag private functions
    - tests: describe in docblock header abstract definitions
    - add links in header/welcome page(blank.tpl): project web site (clic on logo?), README, github

## And always ##

- more unit and functional tests



## Later ##

Documentation:

- reformat code comments in order to use Natural docs (http://www.naturaldocs.org/)


- http caching
- file caching
- x-sender headers for serving static files directly thru Apache and Lighttpd


## Think about it ##
- adding optional renderers (markdown, haml, textile, tenjin, phptal…)

    if(class_exists('Haml'))
    {
        function haml($str, $layout=null, $vars=array())
        {
            #…
        }
    }
    else
    { 
        function haml($str, $layout=null, vars=array())
        {
            trigger_error(__FUNCTION__ . '(): Haml lib is required to use haml rendering.',
                E_USER_WARNING)
        }
    }

- make post, put and delete params accessible with the params() function
    (take care of possible conflict with a route param: by default override get params, but raise an error notice). Really useful ?
